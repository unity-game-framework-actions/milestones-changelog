# All milestones changelog generate config.
changelog:
  # Body format of changelog.
  # Available values:
  #   releases: Array of release objects. (Read about release object: https://docs.github.com/en/rest/reference/repos#list-releases.)
  #   releasesFormatted: Formatted releases as text.
  body: |
    # Changelog

    All notable changes to this project will be documented in this file.

    The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
    and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

    {releasesFormatted}
    
  # Release format.
  # Available values:
  #   releases: Array of release objects. (Save as 'releases' in body.)
  #   release: Release object. (Read about release object: https://docs.github.com/en/rest/reference/repos#get-a-release.)
  #   date: Date object created based on 'dateFormat' settings.
  release: |
    ## [{release.tag_name}]({release.html_url}) - {date.year}-{date.month}-{date.day}  

  # Determines whether to include release body after 'release' format.
  releaseBody: true

  # Used instead of release body format when is empty.
  empty: |
    - No release notes.

  # Settings used to format publish date of issue.
  # (Read about possible options: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat.)
  dateFormat:
    locale: en
    day: 2-digit
    month: 2-digit
    year: numeric

# Milestone changelog generate config.
milestone:
  # Body format of release changelog.
  # Available values:
  #   milestone: Milestone object. (Read about milestone object: https://docs.github.com/en/rest/reference/issues#get-a-milestone.)
  #   groups: Array of the group objects. (Read about group object below.)
  #   groupsFormatted: Formatted groups as text.
  # Description of group object.
  # group:
  #   name: Name of group from config.
  #   issues: Array of issue objects. (Read about issue object: https://docs.github.com/en/rest/reference/issues#get-an-issue.)
  body: |
    ### Release Notes

    - [Milestone]({milestone.html_url}?closed=1)  
        {milestone.description}
    
    {groupsFormatted}

  # Used instead of 'body' format when no any issues found for milestone.
  empty: |
    ### Release Notes

    - No release notes.

  # Group format of issues.
  # Available values:
  #   milestone: Milestone object. (Same as milestone in body.)
  #   groups: Array of the group objects. (Same as groups in body.)
  #   group: Group object. (Read about group in body description.)
  #   issuesFormatted: Formatted issues as text.
  group: |
    ### {group.name}
    
    {issuesFormatted}

  # Issue format from group.
  # Available values:
  #   milestone: Milestone object. (Same as 'milestone' in body.)
  #   groups: Array of the group objects. (Same as 'groups' in body.)
  #   group: Group object. (Read about 'group' in body description.)
  #   issue: Issue object. (Read about issue object: https://docs.github.com/en/rest/reference/issues#get-an-issue.)
  issue: |
    - {issue.title} ([#{issue.number}]({issue.html_url}))  

  # Determines whether to include indented issue body after 'issue' format.
  issueBody: true

  # Setting to group issues before formatting.
  # Every group has some properties.
  # group:
  #   name: Name of group.
  #   state: State of issue to find in milestone. (Possible values: 'open', 'closed' or 'all', more about issues: https://docs.github.com/en/rest/reference/issues.)
  #   labels: List of comma separated label names used to determine whether to include issue in group. (Example: 'bug,fix'.) 
  groups:
  - name: Added
    state: all
    labels: Feature
  - name: Changed
    state: all
    labels: Change
  - name: Deprecated
    state: all
    labels: Deprecation
  - name: Removed
    state: all
    labels: Remove
  - name: Fixed
    state: all
    labels: Bug
  - name: Security
    state: all
    labels: Security
